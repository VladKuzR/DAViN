{"ast":null,"code":"var _jsxFileName = \"/home/vl_kuz/DAViN/src/components/DashboardInterface.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport { RangeSlider } from './RangeSlider';\nimport { MultiSelectCheckbox } from './MultiSelectCheckbox';\nimport { DateRangePicker } from './DatePicker';\nimport { fetchAirtableData } from '../services/airtable';\nimport { lightTheme, darkTheme } from '../themes/themes';\nimport styled from 'styled-components';\nimport { handleSubmit } from '../services/formHandler';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DashboardContainer = styled.div`\n    background: ${props => props.theme.body};\n    min-height: 100vh;\n    color: ${props => props.theme.text};\n    padding: 2rem;\n    font-family: 'Rajdhani', sans-serif;\n`;\n_c = DashboardContainer;\nconst FilterGrid = styled.div`\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n    gap: 2rem;\n    margin-top: 2rem;\n`;\n_c2 = FilterGrid;\nconst FilterSection = styled.div`\n    background: ${props => props.theme.cardBg};\n    border: 1px solid ${props => props.theme.cardBorder};\n    border-radius: 10px;\n    padding: 1.5rem;\n    backdrop-filter: blur(10px);\n    position: relative;\n    z-index: ;\n`;\n_c3 = FilterSection;\nconst DropdownFilterSection = styled(FilterSection)`\n    position: relative;\n    isolation: isolate;\n    z-index: ${props => props.isOpen ? 100 : 1};\n`;\n_c4 = DropdownFilterSection;\nconst ThemeToggle = styled.button`\n    position: fixed;\n    top: 2rem;\n    right: 2rem;\n    background: ${props => props.theme.accent};\n    color: ${props => props.theme.cardBg};\n    border: none;\n    border-radius: 50%;\n    width: 50px;\n    height: 50px;\n    cursor: pointer;\n    box-shadow: 0 0 15px ${props => props.theme.shadowColor};\n    transition: all 0.3s ease;\n\n    &:hover {\n        transform: scale(1.1);\n    }\n`;\n_c5 = ThemeToggle;\nconst SubmitButton = styled.button`\n    background: ${props => props.theme.accent};\n    color: ${props => props.theme.cardBg};\n    border: none;\n    border-radius: 10px;\n    padding: 1rem 2rem;\n    font-size: 1.2rem;\n    cursor: pointer;\n    margin-top: 2rem;\n    transition: all 0.3s ease;\n    box-shadow: 0 0 15px ${props => props.theme.shadowColor};\n    text-transform: uppercase;\n    letter-spacing: 2px;\n    font-weight: 600;\n\n    &:hover {\n        transform: translateY(-2px);\n        box-shadow: 0 5px 20px ${props => props.theme.shadowColor};\n    }\n\n    &:active {\n        transform: translateY(0);\n    }\n`;\n_c6 = SubmitButton;\nconst CheckboxContainer = styled.div`\n    display: flex;\n    justify-content: space-evenly;\n    gap: 1rem;\n    margin-top: 0.5rem;\n`;\n_c7 = CheckboxContainer;\nconst Checkbox = ({\n  checked,\n  onChange,\n  label\n}) => /*#__PURE__*/_jsxDEV(CheckboxWrapper, {\n  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n    type: \"checkbox\",\n    checked: checked,\n    onChange: onChange\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n    children: label\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 9\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 94,\n  columnNumber: 5\n}, this);\n_c8 = Checkbox;\nconst CheckboxWrapper = styled.label`\n    display: flex;\n    align-items: center;\n    gap: 0.5rem;\n    cursor: pointer;\n\n    input[type=\"checkbox\"] {\n        width: 18px;\n        height: 18px;\n        cursor: pointer;\n        accent-color: ${props => props.theme.accent};\n    }\n`;\n_c9 = CheckboxWrapper;\nconst DashboardInterface = () => {\n  _s();\n  var _data$ranges, _data$ranges2, _data$processed, _data$processed2, _data$ranges3, _data$ranges4, _data$ranges5, _data$ranges5$dates, _data$ranges6, _data$ranges6$dates;\n  const [data, setData] = useState(null);\n  const [isDarkTheme, setIsDarkTheme] = useState(true);\n  const [filters, setFilters] = useState({\n    phase: [0, 100],\n    divisions: [],\n    wbsCategory: [],\n    duration: [0, 100],\n    completionStatus: {\n      completed: true,\n      incompleted: true\n    },\n    startDate: null,\n    endDate: null\n  });\n  const [openDropdown, setOpenDropdown] = useState(null);\n  useEffect(() => {\n    const loadData = async () => {\n      const airtableData = await fetchAirtableData();\n      setData(airtableData);\n      if (airtableData !== null && airtableData !== void 0 && airtableData.processed) {\n        setFilters(prev => ({\n          ...prev,\n          phase: airtableData.ranges.phase,\n          duration: airtableData.ranges.duration,\n          divisions: airtableData.processed.divisions || [],\n          wbsCategory: airtableData.processed.wbsCategories || [],\n          startDate: airtableData.ranges.dates.min,\n          endDate: airtableData.ranges.dates.max\n        }));\n      }\n    };\n    loadData();\n  }, []);\n  const handleCompletionChange = status => {\n    setFilters(prev => ({\n      ...prev,\n      completionStatus: {\n        ...prev.completionStatus,\n        [status]: !prev.completionStatus[status]\n      }\n    }));\n  };\n  const onSubmit = async () => {\n    const result = await handleSubmit(filters);\n    // Handle the result as needed\n  };\n  const handleDropdownToggle = (id, isOpen) => {\n    setOpenDropdown(isOpen ? id : null);\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: isDarkTheme ? darkTheme : lightTheme,\n    children: /*#__PURE__*/_jsxDEV(DashboardContainer, {\n      children: [/*#__PURE__*/_jsxDEV(ThemeToggle, {\n        onClick: () => setIsDarkTheme(!isDarkTheme),\n        children: isDarkTheme ? '☀️' : '🌙'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Project Analytics Interface\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FilterGrid, {\n        children: [/*#__PURE__*/_jsxDEV(FilterSection, {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Phase Range\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(RangeSlider, {\n            value: filters.phase,\n            onChange: value => setFilters({\n              ...filters,\n              phase: value\n            }),\n            min: data === null || data === void 0 ? void 0 : (_data$ranges = data.ranges) === null || _data$ranges === void 0 ? void 0 : _data$ranges.phase[0],\n            max: data === null || data === void 0 ? void 0 : (_data$ranges2 = data.ranges) === null || _data$ranges2 === void 0 ? void 0 : _data$ranges2.phase[1]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DropdownFilterSection, {\n          isOpen: openDropdown === 'division',\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Division\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(MultiSelectCheckbox, {\n            options: (data === null || data === void 0 ? void 0 : (_data$processed = data.processed) === null || _data$processed === void 0 ? void 0 : _data$processed.divisions) || [],\n            value: filters.divisions,\n            onChange: value => setFilters({\n              ...filters,\n              divisions: value\n            }),\n            identifier: \"division\",\n            onDropdownToggle: isOpen => handleDropdownToggle('division', isOpen)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DropdownFilterSection, {\n          isOpen: openDropdown === 'wbs',\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"WBS Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(MultiSelectCheckbox, {\n            options: (data === null || data === void 0 ? void 0 : (_data$processed2 = data.processed) === null || _data$processed2 === void 0 ? void 0 : _data$processed2.wbsCategories) || [],\n            value: filters.wbsCategory,\n            onChange: value => setFilters({\n              ...filters,\n              wbsCategory: value\n            }),\n            identifier: \"wbs\",\n            onDropdownToggle: isOpen => handleDropdownToggle('wbs', isOpen)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FilterSection, {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Duration Range\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(RangeSlider, {\n            value: filters.duration,\n            onChange: value => setFilters({\n              ...filters,\n              duration: value\n            }),\n            min: data === null || data === void 0 ? void 0 : (_data$ranges3 = data.ranges) === null || _data$ranges3 === void 0 ? void 0 : _data$ranges3.duration[0],\n            max: data === null || data === void 0 ? void 0 : (_data$ranges4 = data.ranges) === null || _data$ranges4 === void 0 ? void 0 : _data$ranges4.duration[1]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FilterSection, {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Completion Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(CheckboxContainer, {\n            children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n              checked: filters.completionStatus.completed,\n              onChange: () => handleCompletionChange('completed'),\n              label: \"Completed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Checkbox, {\n              checked: filters.completionStatus.incompleted,\n              onChange: () => handleCompletionChange('incompleted'),\n              label: \"Incompleted\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FilterSection, {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Date Range\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(DateRangePicker, {\n            startDate: filters.startDate,\n            endDate: filters.endDate,\n            onChange: ({\n              start,\n              end\n            }) => setFilters({\n              ...filters,\n              startDate: start,\n              endDate: end\n            }),\n            minDate: data === null || data === void 0 ? void 0 : (_data$ranges5 = data.ranges) === null || _data$ranges5 === void 0 ? void 0 : (_data$ranges5$dates = _data$ranges5.dates) === null || _data$ranges5$dates === void 0 ? void 0 : _data$ranges5$dates.min,\n            maxDate: data === null || data === void 0 ? void 0 : (_data$ranges6 = data.ranges) === null || _data$ranges6 === void 0 ? void 0 : (_data$ranges6$dates = _data$ranges6.dates) === null || _data$ranges6$dates === void 0 ? void 0 : _data$ranges6$dates.max\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SubmitButton, {\n        onClick: onSubmit,\n        children: \"SUBMIT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 174,\n    columnNumber: 9\n  }, this);\n};\n_s(DashboardInterface, \"mzkGPh6p0zbPvzDI0Tz4ZoMtD4o=\");\n_c10 = DashboardInterface;\nexport default DashboardInterface;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10;\n$RefreshReg$(_c, \"DashboardContainer\");\n$RefreshReg$(_c2, \"FilterGrid\");\n$RefreshReg$(_c3, \"FilterSection\");\n$RefreshReg$(_c4, \"DropdownFilterSection\");\n$RefreshReg$(_c5, \"ThemeToggle\");\n$RefreshReg$(_c6, \"SubmitButton\");\n$RefreshReg$(_c7, \"CheckboxContainer\");\n$RefreshReg$(_c8, \"Checkbox\");\n$RefreshReg$(_c9, \"CheckboxWrapper\");\n$RefreshReg$(_c10, \"DashboardInterface\");","map":{"version":3,"names":["React","useState","useEffect","ThemeProvider","RangeSlider","MultiSelectCheckbox","DateRangePicker","fetchAirtableData","lightTheme","darkTheme","styled","handleSubmit","jsxDEV","_jsxDEV","DashboardContainer","div","props","theme","body","text","_c","FilterGrid","_c2","FilterSection","cardBg","cardBorder","_c3","DropdownFilterSection","isOpen","_c4","ThemeToggle","button","accent","shadowColor","_c5","SubmitButton","_c6","CheckboxContainer","_c7","Checkbox","checked","onChange","label","CheckboxWrapper","children","type","fileName","_jsxFileName","lineNumber","columnNumber","_c8","_c9","DashboardInterface","_s","_data$ranges","_data$ranges2","_data$processed","_data$processed2","_data$ranges3","_data$ranges4","_data$ranges5","_data$ranges5$dates","_data$ranges6","_data$ranges6$dates","data","setData","isDarkTheme","setIsDarkTheme","filters","setFilters","phase","divisions","wbsCategory","duration","completionStatus","completed","incompleted","startDate","endDate","openDropdown","setOpenDropdown","loadData","airtableData","processed","prev","ranges","wbsCategories","dates","min","max","handleCompletionChange","status","onSubmit","result","handleDropdownToggle","id","onClick","value","options","identifier","onDropdownToggle","start","end","minDate","maxDate","_c10","$RefreshReg$"],"sources":["/home/vl_kuz/DAViN/src/components/DashboardInterface.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport { RangeSlider } from './RangeSlider';\nimport { MultiSelectCheckbox } from './MultiSelectCheckbox';\nimport { DateRangePicker } from './DatePicker';\nimport { fetchAirtableData } from '../services/airtable';\nimport { lightTheme, darkTheme } from '../themes/themes';\nimport styled from 'styled-components';\nimport { handleSubmit } from '../services/formHandler';\n\nconst DashboardContainer = styled.div`\n    background: ${props => props.theme.body};\n    min-height: 100vh;\n    color: ${props => props.theme.text};\n    padding: 2rem;\n    font-family: 'Rajdhani', sans-serif;\n`;\n\nconst FilterGrid = styled.div`\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n    gap: 2rem;\n    margin-top: 2rem;\n`;\n\nconst FilterSection = styled.div`\n    background: ${props => props.theme.cardBg};\n    border: 1px solid ${props => props.theme.cardBorder};\n    border-radius: 10px;\n    padding: 1.5rem;\n    backdrop-filter: blur(10px);\n    position: relative;\n    z-index: ;\n`;\n\nconst DropdownFilterSection = styled(FilterSection)`\n    position: relative;\n    isolation: isolate;\n    z-index: ${props => props.isOpen ? 100 : 1};\n`;\n\nconst ThemeToggle = styled.button`\n    position: fixed;\n    top: 2rem;\n    right: 2rem;\n    background: ${props => props.theme.accent};\n    color: ${props => props.theme.cardBg};\n    border: none;\n    border-radius: 50%;\n    width: 50px;\n    height: 50px;\n    cursor: pointer;\n    box-shadow: 0 0 15px ${props => props.theme.shadowColor};\n    transition: all 0.3s ease;\n\n    &:hover {\n        transform: scale(1.1);\n    }\n`;\n\nconst SubmitButton = styled.button`\n    background: ${props => props.theme.accent};\n    color: ${props => props.theme.cardBg};\n    border: none;\n    border-radius: 10px;\n    padding: 1rem 2rem;\n    font-size: 1.2rem;\n    cursor: pointer;\n    margin-top: 2rem;\n    transition: all 0.3s ease;\n    box-shadow: 0 0 15px ${props => props.theme.shadowColor};\n    text-transform: uppercase;\n    letter-spacing: 2px;\n    font-weight: 600;\n\n    &:hover {\n        transform: translateY(-2px);\n        box-shadow: 0 5px 20px ${props => props.theme.shadowColor};\n    }\n\n    &:active {\n        transform: translateY(0);\n    }\n`;\n\nconst CheckboxContainer = styled.div`\n    display: flex;\n    justify-content: space-evenly;\n    gap: 1rem;\n    margin-top: 0.5rem;\n`;\n\nconst Checkbox = ({ checked, onChange, label }) => (\n    <CheckboxWrapper>\n        <input\n            type=\"checkbox\"\n            checked={checked}\n            onChange={onChange}\n        />\n        <span>{label}</span>\n    </CheckboxWrapper>\n);\n\nconst CheckboxWrapper = styled.label`\n    display: flex;\n    align-items: center;\n    gap: 0.5rem;\n    cursor: pointer;\n\n    input[type=\"checkbox\"] {\n        width: 18px;\n        height: 18px;\n        cursor: pointer;\n        accent-color: ${props => props.theme.accent};\n    }\n`;\n\nconst DashboardInterface = () => {\n    const [data, setData] = useState(null);\n    const [isDarkTheme, setIsDarkTheme] = useState(true);\n    const [filters, setFilters] = useState({\n        phase: [0, 100],\n        divisions: [],\n        wbsCategory: [],\n        duration: [0, 100],\n        completionStatus: {\n            completed: true,\n            incompleted: true\n        },\n        startDate: null,\n        endDate: null\n    });\n    const [openDropdown, setOpenDropdown] = useState(null);\n\n    useEffect(() => {\n        const loadData = async () => {\n            const airtableData = await fetchAirtableData();\n            setData(airtableData);\n            if (airtableData?.processed) {\n                setFilters(prev => ({\n                    ...prev,\n                    phase: airtableData.ranges.phase,\n                    duration: airtableData.ranges.duration,\n                    divisions: airtableData.processed.divisions || [],\n                    wbsCategory: airtableData.processed.wbsCategories || [],\n                    startDate: airtableData.ranges.dates.min,\n                    endDate: airtableData.ranges.dates.max\n                }));\n            }\n        };\n        loadData();\n    }, []);\n\n    const handleCompletionChange = (status) => {\n        setFilters(prev => ({\n            ...prev,\n            completionStatus: {\n                ...prev.completionStatus,\n                [status]: !prev.completionStatus[status]\n            }\n        }));\n    };\n\n    const onSubmit = async () => {\n        const result = await handleSubmit(filters);\n        // Handle the result as needed\n    };\n\n    const handleDropdownToggle = (id, isOpen) => {\n        setOpenDropdown(isOpen ? id : null);\n    };\n\n    return (\n        <ThemeProvider theme={isDarkTheme ? darkTheme : lightTheme}>\n            <DashboardContainer>\n                <ThemeToggle onClick={() => setIsDarkTheme(!isDarkTheme)}>\n                    {isDarkTheme ? '☀️' : '🌙'}\n                </ThemeToggle>\n                <h1>Project Analytics Interface</h1>\n                <FilterGrid>\n                    <FilterSection>\n                        <h3>Phase Range</h3>\n                        <RangeSlider\n                            value={filters.phase}\n                            onChange={(value) => setFilters({ ...filters, phase: value })}\n                            min={data?.ranges?.phase[0]}\n                            max={data?.ranges?.phase[1]}\n                        />\n                    </FilterSection>\n\n                    <DropdownFilterSection isOpen={openDropdown === 'division'}>\n                        <h3>Division</h3>\n                        <MultiSelectCheckbox\n                            options={data?.processed?.divisions || []}\n                            value={filters.divisions}\n                            onChange={(value) => setFilters({ ...filters, divisions: value })}\n                            identifier=\"division\"\n                            onDropdownToggle={(isOpen) => handleDropdownToggle('division', isOpen)}\n                        />\n                    </DropdownFilterSection>\n\n                    <DropdownFilterSection isOpen={openDropdown === 'wbs'}>\n                        <h3>WBS Category</h3>\n                        <MultiSelectCheckbox\n                            options={data?.processed?.wbsCategories || []}\n                            value={filters.wbsCategory}\n                            onChange={(value) => setFilters({ ...filters, wbsCategory: value })}\n                            identifier=\"wbs\"\n                            onDropdownToggle={(isOpen) => handleDropdownToggle('wbs', isOpen)}\n                        />\n                    </DropdownFilterSection>\n\n                    <FilterSection>\n                        <h3>Duration Range</h3>\n                        <RangeSlider\n                            value={filters.duration}\n                            onChange={(value) => setFilters({ ...filters, duration: value })}\n                            min={data?.ranges?.duration[0]}\n                            max={data?.ranges?.duration[1]}\n                        />\n                    </FilterSection>\n\n                    <FilterSection>\n                        <h3>Completion Status</h3>\n                        <CheckboxContainer>\n                            <Checkbox\n                                checked={filters.completionStatus.completed}\n                                onChange={() => handleCompletionChange('completed')}\n                                label=\"Completed\"\n                            />\n                            <Checkbox\n                                checked={filters.completionStatus.incompleted}\n                                onChange={() => handleCompletionChange('incompleted')}\n                                label=\"Incompleted\"\n                            />\n                        </CheckboxContainer>\n                    </FilterSection>\n\n                    <FilterSection>\n                        <h3>Date Range</h3>\n                        <DateRangePicker\n                            startDate={filters.startDate}\n                            endDate={filters.endDate}\n                            onChange={({ start, end }) => setFilters({\n                                ...filters,\n                                startDate: start,\n                                endDate: end\n                            })}\n                            minDate={data?.ranges?.dates?.min}\n                            maxDate={data?.ranges?.dates?.max}\n                        />\n                    </FilterSection>\n                </FilterGrid>\n                <SubmitButton onClick={onSubmit}>\n                    SUBMIT\n                </SubmitButton>\n            </DashboardContainer>\n        </ThemeProvider>\n    );\n};\n\nexport default DashboardInterface; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}